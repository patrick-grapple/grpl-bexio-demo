# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


env: {}
# configuration for grapple ApplicationSet (gras)
gras-deploy:
  enabled: false
gras:
  enabled: true
  gras: {}
  grapi:
    # beimagetag: "v0.130"
    discoveredrepos: true
    ingress: true
    ssl: true
    sslissuer: letsencrypt-grapple-demo
    initContainers:
      - name: test
        spec:
          name: init-db
          image: mysql
          command:
            - bash
            - -c
            - sleep 5; while ! mysql -h $(host) -P $(port) -u $(username) -p$(password) -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; mysql -h $(host) -P $(port) -u $(username) -p$(password) -e "CREATE DATABASE IF NOT EXISTS bexiodemo;"
    extraSecrets:
      - grpl-bexiodemo-conn-credential
      - bexio-config
    # volumes:
    #   - name: data
    #     emptyDir: {}
    #     # persistentVolumeClaim: 
    #     #   claimName: grapi-dbfile
    # volumeMounts:
    #   - name: data
    #     mountPath: /data
    # datasources:
    #   - name: "db"
    #     spec:
    #       memory:
    #         connector: "memory"
    #         name: "db"
    #         file: "/data/db.json"
    #         localStorage: "db"
    datasources:
      - name: bexiodemo
        spec:
          mysql:
            database: bexiodemo
            host: $(host)
            name: bexiodemo
            password: $(password)
            port: $(port)
            url: ""
            user: $(username)
      - name: external
        content: '{"name":"external","connector":"rest","baseURL":"/sample","options":{"headers":{"accept":"application/json","content-type":"application/json", "Authorization": "Bearer ${BEXIO_TOKEN}"}}, "operations":[]}'
    models:
      - name: "clients"
        spec:
          name: clients
          base: Entity
          properties:
            id:
              type: number
              id: true
              required: true
              generated: true
            customerName:
              type: string
            customerLastname:
              type: string
            contactFirstName:
              type: string
            phone:
              type: string
            addressLine1:
              type: string
            addressLine2:
              type: string
            city:
              type: string
            state:
              type: string
            postalCode:
              type: string
            country:
              type: string
            creditLimit:
              type: number
    repositories:
      - name: clients
        spec:
          datasource: bexiodemo
          model: clients
    # relations:
    #   - name: "employees"
    #     spec:
    #       relationName: "employees"
    #       sourceModel: "Customers"
    #       destinationModel: "Employees"
    #       foreignKeyName: "employeesId"
    #       relationType: "belongsTo"
    #       registerInclusionResolver: true
    restcruds:
      - name: "bexiodemo"
        spec:
          datasource: "bexiodemo"
    controllers: []
    postpatches:
      - name: migrate-db
        content: bnBtIHJ1biBtaWdyYXRl
    prepatches:
      - name: create-bexio-data-config
        content: bWtkaXIgLXAgLi9jb25maWcgfHwgdHJ1ZQplY2hvICdbCiAgICB7CiAgICAgICAgImRzIjogImV4dGVybmFsIiwKICAgICAgICAibWV0aG9kIjogInBvc3QiLAogICAgICAgICJjb250cm9sbGVyIjogIkludm9pY2UiLAogICAgICAgICJhcGlVcmkiOiAiL2tiX2ludm9pY2UiLAogICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9hcGkuYmV4aW8uY29tLzIuMC9rYl9pbnZvaWNlIiwKICAgICAgICAiYm9keVBhcmFtcyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImludm9pY2VUaXRsZURhdGUiOiAic3RyaW5nIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZ3JvdXAiOiAic3RyaW5nIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibWluRGF0ZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtYXhEYXRlIjogInN0cmluZyIKICAgICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImFwaUZ1bmN0aW9uIjogImNyZWF0ZUJleGlvSW52b2ljZSIsCiAgICAgICAgIm5hbWUiOiAiSW52b2ljZSIKICAgIH0sCiAgICB7CiAgICAgICAgImRzIjogImV4dGVybmFsIiwKICAgICAgICAiY29udHJvbGxlciI6ICJDb250YWN0IiwKICAgICAgICAiYXBpVXJpIjogIi9jb250YWN0IiwKICAgICAgICAidXJsIjogImh0dHBzOi8vYXBpLmJleGlvLmNvbS8yLjAvY29udGFjdCIsCiAgICAgICAgImFwaUZ1bmN0aW9uIjogImZldGNoQ29udGFjdCIsCiAgICAgICAgIm5hbWUiOiAiQ29udGFjdCIKICAgIH0KXScgPiAuL2NvbmZpZy9iZXhpby1vcHRpb25zLmpzb24=
  gruim:
    # uiimagetag: "0.1.38"
    ssl: true
    sslissuer: letsencrypt-grapple-demo
    style: '{"colors":{"primary":{"DEFAULT":"#34344A","fg":"#fff"},"accent":{"DEFAULT":"#CC5A71","fg":"#fff"}}}'
    config: ""
    additionalpackages: ""
    custommodules: []
replicaCount: 1
image:
  repository: grpl/grapple-template-pr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.45.pr-33"
imagetest:
  repository: apptest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
ingress:
  enabled: true
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # hosts:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
